#!/bin/bash
set -e -u -o pipefail

ORIGINAL_PATH="${PATH}"

DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"

# shellcheck source=lib/shared.bash
. "$DIR/../lib/shared.bash"

echo "--- :snake: Providing conda and job environment"

if [ -z ${CONDA_ROOT+x} ]; then
  echo "Can't find conda root directory. Please set CONDA_ROOT to the local conda root directory on ${BUILDKITE_AGENT_NAME}."
  exit 1
else
  # shellcheck disable=SC1090
  . "${CONDA_ROOT}/etc/profile.d/conda.sh"
  conda activate
fi

# Default name is pipeline-slug
CONDA_ENV="${BUILDKITE_PIPELINE_SLUG}-${BUILDKITE_BRANCH//:/_}"

if [ -e "$(plugin_read_config ENVIRONMENT)" ]; then
  CONDA_ENV_FILE=${BUILDKITE_PLUGIN_CONDA_ENVIRONMENT}
else
  echo "Environment definition file not found: ${BUILDKITE_PLUGIN_CONDA_ENVIRONMENT}"
  exit 1
fi

# Handle env update
if [[ "$(plugin_read_config UPDATE "true")" == "true" ]]; then
  echo "Auto-Update environment $CONDA_ENV."
  conda update -y -n "${CONDA_ENV}" -c conda-forge --file "${CONDA_ENV_FILE}"
fi

if conda activate "$CONDA_ENV"; then
  :
else
  echo "Creating environment $CONDA_ENV from $CONDA_ENV_FILE."
  conda create -y -n "$CONDA_ENV"  -c conda-forge --file "$CONDA_ENV_FILE" || { echo "Failed to create environment."; exit 1; }
  conda activate "$CONDA_ENV" || { echo "Failed to activate new environment."; exit 1; }
fi

echo "--- :terminal: Running commands in the $CONDA_ENV environment"
eval "${BUILDKITE_COMMAND}"

conda deactivate

echo "--- :terminal: Restore original PATH"
export PATH="${ORIGINAL_PATH}"
